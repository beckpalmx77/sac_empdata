<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8' />
    <title>FullCalendar Custom Date Format (DD-MM-YYYY HH:MM)</title>

    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>

    <style>
        body {
            font-family: Arial, Helvetica, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        #calendar {
            max-width: 1100px;
            margin: 40px auto;
            padding: 20px;
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        /* ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏≠‡∏á‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°‡πÉ‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå */
        .fc-event-main-frame {
            display: block;
            padding: 2px 0;
        }
        .fc-event-time-custom {
            font-size: 0.8em;
            opacity: 0.8;
        }
    </style>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                // ‚öôÔ∏è ‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏•‡∏±‡∏Å
                initialView: 'dayGridMonth',
                locale: 'th', // ‡πÉ‡∏ä‡πâ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },

                // üîó ‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å PHP
                events: 'fetch_events.php',

                // üé® ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå
                // ‡πÄ‡∏£‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ eventContent ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö DD-MM-YYYY HH:MM ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå
                eventContent: function(arg) {
                    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ arg.event.start (DateTime Object) ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
                    if (arg.event.start) {

                        // **‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:** ‡πÉ‡∏ä‡πâ formatDate() ‡∏Ç‡∏≠‡∏á FullCalendar ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
                        let startTime = FullCalendar.formatDate(arg.event.start, {
                            day: '2-digit',
                            month: '2-digit',
                            year: 'numeric',
                            hour: '2-digit',
                            minute: '2-digit',
                            hour12: false // 24-hour clock (HH)
                        });

                        // ‡πÅ‡∏õ‡∏•‡∏á‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏à‡∏≤‡∏Å YYYY/MM/DD ‡πÄ‡∏õ‡πá‡∏ô YYYY-MM-DD
                        // ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ DD-MM-YYYY HH:MM
                        // FullCalendar's date formatting is locale-dependent, so we enforce the structure:
                        // Use replace() to force the DD-MM-YYYY separator
                        startTime = startTime.replace(/\//g, '-').split(',')[0].trim();
                        let [datePart, timePart] = startTime.split(' '); // ‡πÅ‡∏¢‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤

                        // ‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡∏±‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô DD-MM-YYYY HH:MM
                        let formattedDate = '';
                        if (datePart && timePart) {
                            let dateParts = datePart.split('-');
                            if (dateParts.length === 3) {
                                // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ß‡πà‡∏≤ formatDate ‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏õ‡πá‡∏ô YYYY-MM-DD ‡∏´‡∏£‡∏∑‡∏≠ DD/MM/YYYY
                                // ‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ regex /[^0-9]/g ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡πÅ‡∏Ñ‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç ‡πÅ‡∏•‡πâ‡∏ß‡∏à‡∏±‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà
                                const numbers = datePart.match(/\d+/g);
                                if (numbers.length >= 3) {
                                    formattedDate = numbers[2] + '-' + numbers[1] + '-' + numbers[0]; // DD-MM-YYYY
                                }
                            }
                            formattedDate = (formattedDate || datePart) + ' ' + timePart; // ‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤
                        } else {
                            formattedDate = startTime; // ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏´‡∏≤‡∏Å‡πÅ‡∏¢‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ
                        }

                        // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏≠‡∏á‡∏Ñ‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö HTML ‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•
                        return {
                            html: '<div class="fc-event-main-frame">' +
                                '<div class="fc-event-title">' + arg.event.title + '</div>' +
                                '<div class="fc-event-time-custom">' + formattedDate + '</div>' +
                                '</div>'
                        };

                    } else {
                        // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö All-Day Events ‡∏´‡∏£‡∏∑‡∏≠ Event ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏ß‡∏•‡∏≤
                        return {
                            html: '<div class="fc-event-main-frame">' +
                                '<div class="fc-event-title">' + arg.event.title + '</div>' +
                                '</div>'
                        };
                    }
                },

                // ‚è∞ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏ü‡∏≠‡∏£‡πå‡πÅ‡∏°‡∏ï‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Time Grid Axis (‡∏°‡∏∏‡∏°‡∏ã‡πâ‡∏≤‡∏¢‡πÉ‡∏ô Week/Day View)
                slotLabelFormat: {
                    hour: '2-digit',
                    minute: '2-digit',
                    hour12: false // HH:MM (24-hour)
                }
            });

            calendar.render();
        });
    </script>
</head>
<body>

<div id='calendar'></div>

</body>
</html>